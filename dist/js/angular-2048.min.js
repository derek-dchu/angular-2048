"use strict";var app=angular.module("2048App",["Game","Grid","Keyboard","templates"]);app.controller("GameController",["GameManager","KeyboardManager",function(e,t){this.gameManager=e,this.newGame=function(){t.init(),this.gameManager.newGame(),this.startGame()},this.startGame=function(){var e=this;t.on(function(t){e.gameManager.move(t)})},this.newGame()}]),angular.module("Game",["Grid","ngCookies"]).service("GameManager",["$q","GridManager","$cookieStore",function(e,t,i){this.grid=t.grid,this.tiles=t.tiles,this.winningValue=2048,this.reinit=function(){this.currentScore=0,this.bestScore=this.getBestScore(),this.win=!1,this.gameOver=!1},this.newGame=function(){t.generateEmptyGameBoard(),t.initGameBoard(),this.reinit()},this.move=function(i){var n=this,r=function(){if(n.gameOver)return!1;var e=t.coordinatesInDirection(i),r=!1;t.prepareTiles(),e.x.forEach(function(o){e.y.forEach(function(e){var a={x:o,y:e},s=t.getCellAt(a);if(s){var l=t.nextAvailableCellInDirection(s.coordinate,i),h=l.nextTile;if(h&&h.value===s.value&&!h.merged){var u=2*s.value,c=t.newTile(s.coordinate,u);c.merged=!0,t.removeTile(s),t.insertTile(c),t.moveTile(c,h.coordinate),n.updateScore(n.currentScore+u),u>=n.winningValue&&(this.win=!0),r=!0}else t.areSameCoordinates(a,l.nextCoordinate)||(t.moveTile(s,l.nextCoordinate),r=!0)}})}),r&&(t.randomlyInsertTile(),(n.win||!n.moveAvailable())&&(n.gameOver=!0))};return e.when(r())},this.updateScore=function(e){this.currentScore=e,this.currentScore>this.bestScore&&(this.bestScore=this.currentScore,i.put("bestScore",this.currentScore))},this.moveAvailable=function(){return t.isAnyCellAvailable()||t.isTileMatchesAvailable()},this.getBestScore=function(){return parseInt(i.get("bestScore"))||0}}]),angular.module("Grid",[]).factory("TileModel",function(){var e=16,t=function(t,i){this.coordinate=t,this.value=i||2,this.merged=!1,this.id=e++};return t.prototype.getPosition=function(){return this.coordinate},t.prototype.updateCoordinate=function(e){this.coordinate=e},t.prototype.reset=function(){this.merged=!1},t}).service("GridManager",["TileModel",function(e){this.grid=[],this.tiles=[],this.size=4,this.initTileNumber=2;var t={left:{x:-1,y:0},right:{x:1,y:0},up:{x:0,y:-1},down:{x:0,y:1}};this.newTile=function(t,i){return new e(t,i)},this.generateEmptyGameBoard=function(){for(var e=0;e<Math.pow(this.size,2);e++)this.grid[e]=null,this.tiles[e]=null},this.initGameBoard=function(){for(var e=0;e<this.initTileNumber;e++)this.randomlyInsertTile()},this.isTileMatchesAvailable=function(){for(var e=0;e<Math.pow(this.size,2);e++){var i=this._positionToCoordinate(e),n=this.tiles[e];if(n)for(var r in t){var o=t[r],a={x:i.x+o.x,y:i.y+o.y};if(this.isWithinGrid(a)&&this.getCellAt(a).value==n.value)return!0}}return!1},this.coordinatesInDirection=function(e){for(var i=t[e],n={x:[],y:[]},r=0;r<this.size;r++)n.x.push(r),n.y.push(r);return i.x>0&&(n.x=n.x.reverse()),i.y>0&&(n.y=n.y.reverse()),n},this.nextAvailableCellInDirection=function(e,i){var n,r=t[i];do n=e,e={x:n.x+r.x,y:n.y+r.y};while(this.isCellAvailable(e));return{nextCoordinate:n,nextTile:this.getCellAt(e)}},this.isCellAvailable=function(e){return this.isWithinGrid(e)&&!this.getCellAt(e)},this.availableCells=function(){var e=[],t=this;return this.forEachCell(function(i){t.isCellAvailable(i)&&e.push(i)}),e},this.isAnyCellAvailable=function(){return this.availableCells().length>0},this.randomAvailableCell=function(){var e=this.availableCells();return e.length>0?e[Math.floor(Math.random()*e.length)]:void 0},this.forEachCell=function(e){for(var t=0;t<Math.pow(this.size,2);t++){var i=this._positionToCoordinate(t);e(i,this.tiles[t])}},this.setCellAt=function(e,t){var i=this._coordinateToPosition(e);this.tiles[i]=t},this.getCellAt=function(e){var t=this._coordinateToPosition(e);return this.tiles[t]},this.prepareTiles=function(){this.forEachCell(function(e,t){t&&t.reset()})},this.insertTile=function(e){this.setCellAt(e.coordinate,e)},this.removeTile=function(e){var t=this._coordinateToPosition(e.coordinate);delete this.tiles[t]},this.randomlyInsertTile=function(){var e=this.randomAvailableCell(),t=this.newTile(e,2);this.setCellAt(t.coordinate,t)},this.moveTile=function(e,t){this.setCellAt(e.coordinate,null),this.setCellAt(t,e),e.updateCoordinate(t)},this._positionToCoordinate=function(e){return 0>e||e>=Math.pow(this.size,2)?null:{x:Math.trunc(e/this.size),y:e%this.size}},this._coordinateToPosition=function(e){return e.x*this.size+e.y},this.isWithinGrid=function(e){return e.x>=0&&e.x<this.size&&e.y>=0&&e.y<this.size},this.areSameCoordinates=function(e,t){return e.x===t.x?e.y===t.y:!1}}]),angular.module("Grid").directive("grid",function(){return{restrict:"A",require:"ngModel",scope:{ngModel:"="},templateUrl:"gridId.html"}}),angular.module("Grid").directive("tile",function(){return{restrict:"A",require:"ngModel",scope:{ngModel:"="},templateUrl:"tileId.html"}}),angular.module("Keyboard",[]).service("KeyboardManager",["$document",function(e){var t={37:"left",38:"up",39:"right",40:"down"};this.init=function(){var i=this;this.keyEventHandlers=[],e.bind("keydown",function(e){var n=t[e.which];n&&(e.preventDefault(),i._handleKeyEvent(n,e))})},this._handleKeyEvent=function(e,t){var i=this.keyEventHandlers;if(i)for(var n=0;n<i.length;n++){var r=i[n];r(e,t)}},this.on=function(e){this.keyEventHandlers.push(e)}}]);